openapi: 3.0.0
info:
  title: Petimus
  version: '1.0'
  description: Petimus API for create and manage test.
  contact:
    name: Petimus
    url: 'http://www.petimus.com'
    email: web@petimus.com
servers:
  - url: 'http://localhost:3000'
paths:
  /theme:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
      operationId: get-theme
      description: Get the list of theme from a domain.
    post:
      summary: ''
      operationId: post-theme
      responses:
        '200':
          description: OK
      description: Create a theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
  '/theme/{theme_id}':
    parameters:
      - schema:
          type: string
        name: theme_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - theme
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      operationId: get-theme-theme_id
      description: Information from a specific theme
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
  '/theme/{theme_id}/category':
    parameters:
      - schema:
          type: string
        name: theme_id
        in: path
        required: true
        description: id of the theme
    get:
      summary: Your GET endpoint
      tags:
        - theme
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      operationId: get-theme-theme_id-category
      description: The list of categories for a specific theme.
  /test:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-test
  '/test/{test-id}/start':
    parameters:
      - schema:
          type: string
        name: test-id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-test-test-id-start
      description: Start the execution of a test
  '/test/{test-id}/end':
    parameters:
      - schema:
          type: string
        name: test-id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-test-test-id-end
      description: End the execution of a test
components:
  schemas:
    Theme:
      title: Theme
      type: object
      properties:
        theme_id:
          type: string
        theme_name:
          type: string
      x-examples:
        example-theme:
          theme_id: '001'
          theme_name: Javascript
      description: Definition of a theme.
    Category:
      title: Category
      type: object
      description: Every Theme has a list of categories.
      x-examples:
        example-category:
          category_id: '001'
          category_name: Arrays
      properties:
        category_id:
          type: string
          description: id of the category
        category_name:
          type: string
          description: name of the category
    Test:
      title: Test
      type: object
      description: A Test
      properties:
        test_id:
          type: string
        '':
          type: string
    Question:
      title: Question
      type: object
      description: A question of the test.
      properties:
        question-id:
          type: string
        category-id:
          type: string
        theme-id:
          type: string
        statement:
          type: string
